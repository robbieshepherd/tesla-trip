//= require jquery
//= require jquery_ujs
//= require_tree .

var map = L.mapbox.map('map', {
    tilejson:    "2.0.0",
    bounds:      [-180,-85,180,85],
    center:      [-77.67333984375,38.565347844885466,6],
    data:        ["http://a.tiles.mapbox.com/v3/timdorr.g9a9eko1/markers.geojsonp"],
    id:          "timdorr.g9a9eko1",
    maxzoom:     6,
    minzoom:     6,
    name:        "Tesla Trip",
    private:     true,
    scheme:      "xyz",
    tiles:       ["/tiles/{z}/{x}/{y}.png"]
} , {zoomControl: false});

map.dragging.disable();
map.touchZoom.disable();
map.doubleClickZoom.disable();
map.scrollWheelZoom.disable();
if (map.tap) map.tap.disable();

var locationIcon = L.icon({
  iconUrl:    "<%= asset_path("bluedot.png") %>",
  iconSize:   [17, 17],
  iconAnchor: [8,  8],
  className:  "location-icon"
});

var locationPulse = L.divIcon({
  iconSize:  [50, 50],
  className: "location-pulse",
  html:      "<div class='pulse'></div>"
});

var carData = [], stateData = [];
var carPathLayer, routePathLayer;
var carGeoJSON = { type: 'LineString', coordinates: [] };

var locationMarker, locationMarkerPulse;

function loadTelemetry() {
  routePathLayer = L.geoJson(routeGeoJSON, { style: { color:"#6699ff", weight: 6 } }).addTo(map);

  // Progress Route
  $.ajax({ dataType: "json", url: "/telemetry" })
    .done(function(response){
      carData = response.data;
      var length = carData.length;

      for (var i = 0; i < length; i++) {
        carGeoJSON.coordinates.push([carData[i].lng, carData[i].lat]);
      }

      carPathLayer = L.geoJson(carGeoJSON, { style: { color:"#7e3700", weight: 3, dashArray: "5,10" } }).addTo(map);

      progressLoaded = true;
      checkLoading();
    });

  // Current state & location
  $.ajax({ dataType: "json", url: "/telemetry/state" })
    .done(function(response){
      stateData = response;

      locationMarkerPulse = L.marker([stateData.latitude, stateData.longitude], { icon: locationPulse });
      locationMarkerPulse.addTo(map);

      locationMarker = L.marker([stateData.latitude, stateData.longitude], { icon: locationIcon });
      locationMarker.addTo(map);

      stateLoaded = true;
      checkLoading();
    });
}

var progressLoaded = false;
var stateLoaded = false;

function checkLoading() {
  if (progressLoaded && stateLoaded) $(".loading").fadeOut();
}

setTimeout(loadTelemetry, 100);