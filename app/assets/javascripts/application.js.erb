//= require jquery
//= require jquery_ujs
//= require_tree .

var map = L.mapbox.map('map', {
    tilejson:    "2.0.0",
    bounds:      [-180,-85,180,85],
    center:      [-77.67333984375,38.565347844885466,6],
    data:        ["http://a.tiles.mapbox.com/v3/timdorr.g9a9eko1/markers.geojsonp"],
    id:          "timdorr.g9a9eko1",
    maxzoom:     6,
    minzoom:     6,
    name:        "Tesla Trip",
    private:     true,
    scheme:      "xyz",
    tiles:       ["/tiles/{z}/{x}/{y}.png"]
} , {zoomControl: false});

map.dragging.disable();
map.touchZoom.disable();
map.doubleClickZoom.disable();
map.scrollWheelZoom.disable();
if (map.tap) map.tap.disable();

var locationIcon = L.icon({
  iconUrl:    "<%= asset_path("bluedot.png") %>",
  iconSize:   [17, 17],
  iconAnchor: [8,  8],
  className:  "location-icon"
});

var locationPulse = L.divIcon({
  iconSize:  [50, 50],
  className: "location-pulse",
  html:      "<div class='pulse'></div>"
});

var carData = [], stateData = [];
var carPathLayer, routePathLayer;
var carGeoJSON = { type: 'LineString', coordinates: [] };

var locationMarker, locationMarkerPulse;

function loadTelemetry() {
  routePathLayer = L.geoJson(routeGeoJSON, { style: { color:"#6699ff", weight: 6 } }).addTo(map);

  $.ajax({ dataType: "json", url: "/telemetry" }).done(function(response) {
    carData = response.data;
    var length = carData.length;

    for (var i = 0; i < length; i++) {
      carGeoJSON.coordinates.push([carData[i].lng, carData[i].lat]);
    }

    carPathLayer = L.geoJson(carGeoJSON, { style: { color:"#7e3700", weight: 3, dashArray: "5,10" } }).addTo(map);

    progressLoaded = true;
    checkLoading();
  });
}

function fetchState() {
  // Current state & location
  $.ajax({ dataType: "json", url: "/telemetry/state" }).done(function(response) {
    stateData = response;

    locationMarkerPulse = L.marker([stateData.latitude, stateData.longitude], { icon: locationPulse });
    locationMarkerPulse.addTo(map);

    locationMarker = L.marker([stateData.latitude, stateData.longitude], { icon: locationIcon });
    locationMarker.addTo(map);

    var stateDiv = $("#state");

    // Status
    if (stateData.shift_state == "P" || stateData.shift_state == null) stateDiv.find(".parked").removeClass("hide");
    else stateDiv.find(".driving").removeClass("hide");

    if (stateData.charging_state == "Charging") stateDiv.find(".charging").removeClass("hide");
    else stateDiv.find(".battery").removeClass("hide");

    // Driving
    stateDiv.find(".lat dd").text(stateData.latitude);
    stateDiv.find(".lng dd").text(stateData.longitude);
    stateDiv.find(".speed dd").text((stateData.speed || 0)+" MPH");

    // Charging
    stateDiv.find(".charge_rate dd").text(stateData.charge_rate+" MPH");
    stateDiv.find(".time_to_full dd").text(stateData.time_to_full_charge+" hours");
    stateDiv.find(".battery_level dd").text(stateData.battery_level+"%");
    stateDiv.find(".range dd").text(stateData.battery_range + " miles");

    // Climate
    if (stateData.outside_temp == null) stateDiv.find(".outside_temp").hide();
    else stateDiv.find(".outside_temp dd").text(Math.round((stateData.outside_temp * (9/5))+32)+"ยบ");
    if (stateData.inside_temp == null) stateDiv.find(".inside_temp").hide();
    else stateDiv.find(".inside_temp dd").text(Math.round((stateData.inside_temp * (9/5))+32)+"ยบ");
    if (stateData.outside_temp == null && stateData.inside_temp == null) stateDiv.find(".climate").hide();

    stateLoaded = true;
    checkLoading();
  });
}

var progressLoaded = false;
var stateLoaded = false;

function checkLoading() {
  if (progressLoaded && stateLoaded) {
    $(".loading").fadeOut();
    $("#state").addClass("fadein");
  }
}

setTimeout(loadTelemetry, 100);
setTimeout(fetchState, 100);